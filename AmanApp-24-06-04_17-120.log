17:12:49.608 709  INFO  c.m.H.HotelServiceApplication - Starting HotelServiceApplication using Java 21.0.3 with PID 27680 (/home/aman.ranjan@happiestminds.com/Desktop/Work/MicroservicesWithFlux/HotelService/target/classes started by aman.ranjan in /home/aman.ranjan@happiestminds.com/Desktop/Work/MicroservicesWithFlux/UserService)
17:12:49.610 711  INFO  c.m.H.HotelServiceApplication - No active profile set, falling back to 1 default profile: "default"
17:12:50.146 1247 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
17:12:50.231 1332 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 1 R2DBC repository interface.
17:12:50.456 1557 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=f9e8bc35-82a1-3dc0-b9a1-1ee68bdcd9fd
17:12:50.529 1630 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
17:12:50.532 1633 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
17:12:50.534 1635 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
17:12:50.535 1636 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
17:12:50.536 1637 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
17:12:51.344 2445 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
17:12:51.394 2495 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
17:12:51.415 2516 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
17:12:51.498 2599 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
17:12:51.501 2602 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
17:12:51.513 2614 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
17:12:51.514 2615 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
17:12:51.514 2615 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
17:12:51.514 2615 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
17:12:51.514 2615 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
17:12:51.514 2615 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
17:12:51.514 2615 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
17:12:51.887 2988 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
17:12:51.890 2991 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
17:12:51.892 2993 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
17:12:51.897 2998 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1717501371896 with initial instances count: 4
17:12:51.901 3002 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application HOTEL-SERVICE with eureka with status UP
17:12:51.901 3002 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1717501371901, current=UP, previous=STARTING]
17:12:51.903 3004 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_HOTEL-SERVICE/10.16.35.207:Hotel-Service:8083: registering service...
17:12:51.928 3029 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_HOTEL-SERVICE/10.16.35.207:Hotel-Service:8083 - registration status: 204
17:12:51.976 3077 INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8083
17:12:51.977 3078 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8083
17:12:52.002 3103 INFO  c.m.H.HotelServiceApplication - Started HotelServiceApplication in 2.79 seconds (process running for 3.336)
